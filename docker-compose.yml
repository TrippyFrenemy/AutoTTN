version: '3.12'

services:
  fast-api:
    build: .
#    depends_on:
#      redis:
#        condition: service_healthy
#      db:
#        condition: service_healthy
    env_file:
      - .env
    ports:
      - "8000:8000"
    volumes:
      - ./logs:/app/logs
    networks:
      - amazon_network

#  db:
#    image: postgres:17-alpine
#    restart: always
#    environment:
#      - POSTGRES_USER=${DB_USER}
#      - POSTGRES_PASSWORD=${DB_PASS}
#      - POSTGRES_DB=${DB_NAME}
#    volumes:
#      - postgres_data:/var/lib/postgresql/data
#    networks:
#      - amazon_network
#    healthcheck:
#      test: ["CMD-SHELL", "pg_iseady -U ${DB_USER:-postgres}"]
#      interval: 10s
#      timeout: 5s
#      retries: 5

#  redis:
#    image: redis:latest
#    restart: always
#    command: redis-server --requirepass ${REDIS_PASSWORD}
#    environment:
#      - REDIS_PASSWORD=${REDIS_PASSWORD}
#    ports:
#      - "${REDIS_PORT}:${REDIS_PORT}"
#    volumes:
#      - redis_data:/data
#    networks:
#      - amazon_network
#    healthcheck:
#      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
#      interval: 10s
#      timeout: 5s
#      retries: 5

#volumes:
#  postgres_data:
#  redis_data:

networks:
  amazon_network:
    driver: bridge